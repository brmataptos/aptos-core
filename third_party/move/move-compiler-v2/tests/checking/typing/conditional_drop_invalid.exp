// ---- Model Dump
module 0x42::M {
    struct Box {
        f: #0,
    }
    struct Pair {
        f1: #0,
        f2: #1,
    }
    struct R {
        dummy_field: bool,
    }
    struct S {
        dummy_field: bool,
    }
    private fun ex<T>(t: #0) {
        pack M::Box<M::R>(pack M::R(false));
        pack M::Box<M::Box<M::R>>(pack M::Box<M::R>(pack M::R(false)));
        pack M::Box<T>(t);
        pack M::Box<M::Box<T>>(pack M::Box<T>(t));
        pack M::Pair<M::S, M::R>(pack M::S(false), pack M::R(false));
        Tuple(pack M::Pair<M::S, M::R>(pack M::S(false), pack M::R(false)), 0, 0x1);
        Eq<M::Box<M::R>>(pack M::Box<M::R>(pack M::R(false)), pack M::Box<M::R>(pack M::R(false)));
        Eq<M::Box<M::Box<M::R>>>(pack M::Box<M::Box<M::R>>(pack M::Box<M::R>(pack M::R(false))), pack M::Box<M::Box<M::R>>(pack M::Box<M::R>(pack M::R(false))));
        Eq<M::Box<T>>(pack M::Box<T>(t), pack M::Box<T>(t));
        Eq<M::Box<M::Box<T>>>(pack M::Box<M::Box<T>>(pack M::Box<T>(t)), pack M::Box<M::Box<T>>(pack M::Box<T>(t)));
        Eq<M::Pair<M::R, M::S>>(pack M::Pair<M::R, M::S>(pack M::R(false), pack M::S(false)), pack M::Pair<M::R, M::S>(pack M::R(false), pack M::S(false)));
        Tuple()
    }
    spec fun $ex<T>(t: #0);
} // end 0x42::M
